name: Release Rulesfile
on: push

jobs:
  release-rulesfile:
    runs-on: ubuntu-latest

    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
      packages: write

    env:
      RULES_FILE: falco_rules.yaml

      OCI_REGISTRY: ghcr.io
      ARTIFACT_NAME: ${{ github.repository }}
      ARTIFACT_VERSION: ${{ env.GITHUB_SHA }}

    steps:

      # Get falcoctl
      - name: Checkout Falcoctl Repo
        uses: actions/checkout@v3
        with:
          repository: falcosecurity/falcoctl
          ref: v0.4.0
          path: falcoctl
      - name: Setup Golang
        uses: actions/setup-go@v4
        with:
          go-version-file: falcoctl/go.mod
          cache-dependency-path: falcoctl/go.sum
      - run: go version
      - name: Build falcoctl
        run: make
        working-directory: falcoctl

      # Get the rules
      - name: Checkout Rules Repo
        uses: actions/checkout@v3
        with:
          path: rules

      # Upload the rules artifact with falcoctl
      - name: Upload OCI artifacts to GitHub packages
        run: |
             falcoctl/falcoctl registry push \
             --config /dev/null \
             --type rulesfile \
             --version ${ARTIFACT_VERSION} \
             ${OCI_REGISTRY}/${ARTIFACT_NAME}@${ARTIFACT_VERSION} \
             rules/${RULES_FILE}             
        env:
          FALCOCTL_REGISTRY_AUTH_BASIC: ${{ env.OCI_REGISTRY }},${{ github.repository_owner }},${{ secrets.GITHUB_TOKEN }}

      # Create an signature of the rules artifact as OCI artifact
      - name: Install Cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v2.0.2'
      - run: cosign version
      - name: Sign the images with GitHub OIDC Token
        env:
          # Add support for OCI v1.1
          COSIGN_EXPERIMENTAL: "1"
        run: cosign sign ${OCI_REGISTRY}/${ARTIFACT_NAME}@${ARTIFACT_VERSION}

